{"version":3,"file":"static/js/188.627b5ad6.chunk.js","mappings":"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","sources":["components/service/GetFilmInfo.jsx","webpack://react-homework-template/./src/components/FilmDetails/FilmDetails.module.css?7909","components/FilmDetails/FilmDetails.jsx","components/service/SearchParams.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix';\nimport { searchParams } from './SearchParams';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const GetFilmInfo = async id => {\n  const path = `/movie/${id}`;\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  if (response.data.total_results < 1) {\n    Notify.failure(`Sorry we can't find information for your film`);\n    return;\n  }\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filmBlockContainer\":\"FilmDetails_filmBlockContainer__rmu8B\",\"filmBlock\":\"FilmDetails_filmBlock__ELH9K\",\"filmBlockItem\":\"FilmDetails_filmBlockItem__rQDWm\",\"filmBlockItemLinks\":\"FilmDetails_filmBlockItemLinks__f9h94\",\"filmTitle\":\"FilmDetails_filmTitle__M8Olv\",\"filmDate\":\"FilmDetails_filmDate__JvxGX\",\"filmOverviewTitle\":\"FilmDetails_filmOverviewTitle__udWkQ\",\"filmOverviewTitleText\":\"FilmDetails_filmOverviewTitleText__Bt+xQ\",\"filmGenresTitle\":\"FilmDetails_filmGenresTitle__TBi+p\",\"filmGenresTitleText\":\"FilmDetails_filmGenresTitleText__iJfyR\",\"seeMoreLink\":\"FilmDetails_seeMoreLink__z++lP\"};","import { GetFilmInfo } from 'components/service/GetFilmInfo';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\n\nimport css from './FilmDetails.module.css';\n\nconst DEFAULT_IMG = 'https://openclipart.org/image/800px/323563';\n\nconst FilmDetails = () => {\n  const [film, setFilm] = useState(null);\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/products';\n\n  useEffect(() => {\n    GetFilmInfo(id).then(data => setFilm(data));\n  }, [id]);\n\n  const imgSrc =\n    film && film.poster_path\n      ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n      : DEFAULT_IMG;\n\n  return (\n    film && (\n      <div className={css.filmBlockContainer}>\n        <Link className={css.seeMoreLink} to={backLinkHref}>\n          go back\n        </Link>\n        <div className={css.filmBlock}>\n          <div className={css.filmBlockItem}>\n            <img src={imgSrc} alt={film.title} width=\"300\" />\n          </div>\n          <div className={css.filmBlockItem}>\n            <h2 className={css.filmTitle}>{film.title}</h2>\n            <p className={css.filmDate}>{film.release_date}</p>\n            <p>Rating {Math.round(film.vote_average)}/10</p>\n            <p className={css.filmOverviewTitle}>Overview</p>\n            <p className={css.filmOverviewTitleText}>{film.overview}</p>\n            <p className={css.filmGenresTitle}>Genres :</p>\n            {film.genres.map(({ name }, index) => (\n              <p key={index} className={css.filmGenresTitleText}>\n                {name}\n              </p>\n            ))}\n          </div>\n          <div className={css.filmBlockItem}>\n            <div className={css.filmBlockItemLinks}>\n              <Link className={css.seeMoreLink} to=\"cast\">\n                Cast\n              </Link>\n              <Link className={css.seeMoreLink} to=\"reviews\">\n                Reviews\n              </Link>\n            </div>\n\n            <Suspense fallback={<div>Loading page...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default FilmDetails;\n","export const searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'd21e7c74c298022b205fb848988c75ba',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n"],"names":["axios","GetFilmInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","path","response","wrap","_context","prev","next","concat","searchParams","sent","data","total_results","Notify","abrupt","stop","_x","apply","arguments","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","film","setFilm","useParams","backLinkHref","useLocation","state","from","useEffect","then","imgSrc","poster_path","_jsxs","className","css","children","_jsx","Link","to","src","alt","title","width","release_date","Math","round","vote_average","overview","genres","map","index","name","Suspense","fallback","Outlet","URLSearchParams","method","api_key","language","include_adult","headers","accept"],"sourceRoot":""}