{"version":3,"file":"static/js/441.940fe766.chunk.js","mappings":"sPAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAE,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OAAnBL,EAAI,UAAAM,OAAaP,EAAE,YAAAI,EAAAE,KAAA,EACFb,EAAAA,EAAAA,IAAU,GAADc,OAAIN,EAAI,KAAAM,OAAIC,EAAAA,IAAgB,KAAD,EAA7C,MAARN,EAAQE,EAAAK,MAEDC,KAAKC,QAAQC,OAAS,GAAC,CAAAR,EAAAE,KAAA,QAC8B,OAAhEO,EAAAA,OAAAA,QAAe,iDAAiDT,EAAAU,OAAA,wBAAAV,EAAAU,OAAA,SAI3DZ,EAASQ,KAAKC,SAAO,wBAAAP,EAAAW,OAAA,GAAAhB,EAAA,KAC7B,gBAV0BiB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,K,SCL3B,EAA8B,6BAA9B,EAA6E,iCAA7E,EAA6I,8CAA7I,EAAuN,2CAAvN,EAAwR,qC,SC8CxR,EAvCgB,WACd,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GACxBrB,GAAOyB,EAAAA,EAAAA,MAAPzB,GAYR,OAVA0B,EAAAA,EAAAA,YAAU,WACRhC,EAAeM,GACZ2B,MAAK,SAAAjB,GACJc,EAAcd,EAChB,IACCkB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAChB,GACJ,GAAG,CAAC7B,KAGF+B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGV,IACCQ,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAgBF,SAC5BV,EAAWa,KAAI,SAAAzC,GAA2C,IAAxCK,EAAEL,EAAFK,GAAIqC,EAAM1C,EAAN0C,OAAQC,EAAW3C,EAAX2C,YAAaC,EAAO5C,EAAP4C,QACpCC,EAASF,EAAW,mCAAA/B,OACa+B,GAtB/B,oDAyBR,OACEG,EAAAA,EAAAA,MAAA,MAAaP,UAAWC,EAAoBF,SAAA,EAC1CQ,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAiCF,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,OAAKW,IAAKF,EAAQG,IAAKN,EAAQO,MAAM,WACrCb,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAA8BF,SAAEI,QAEhDN,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAwBF,SAAEM,MALjCvC,EAQb,OAKV,C,sDC7CO,IAAMQ,EAAe,IAAIqC,gBAAgB,CAC9CC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,qB","sources":["components/service/GetFilmReviews.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/service/SearchParams.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix';\nimport { searchParams } from './SearchParams';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const GetFilmReviews = async id => {\n  const path = `/movie/${id}/reviews`;\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  if (response.data.results.length < 1) {\n    Notify.failure(`Sorry we can't find information for your film`);\n    return;\n  }\n\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsListItem\":\"Reviews_reviewsListItem__FIdwO\",\"reviewsListItemAuthorWrapper\":\"Reviews_reviewsListItemAuthorWrapper__qwF1P\",\"reviewsListItemAuthorName\":\"Reviews_reviewsListItemAuthorName__lkSp-\",\"reviewsListItemText\":\"Reviews_reviewsListItemText__Yx-N6\"};","import { useEffect, useState } from 'react';\nimport { GetFilmReviews } from 'components/service/GetFilmReviews';\nimport { useParams } from 'react-router-dom';\n\nimport css from './Reviews.module.css';\n\nconst DEFAULT_IMG = 'https://openclipart.org/download/324734/koala.svg';\n\nconst Reviews = () => {\n  const [filmReview, setFilmReview] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    GetFilmReviews(id)\n      .then(data => {\n        setFilmReview(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {filmReview && (\n        <ul className={css.reviewsList}>\n          {filmReview.map(({ id, author, avatar_path, content }) => {\n            const imgSrc = avatar_path\n              ? `https://image.tmdb.org/t/p/w500/${avatar_path}`\n              : DEFAULT_IMG;\n\n            return (\n              <li key={id} className={css.reviewsListItem}>\n                <div className={css.reviewsListItemAuthorWrapper}>\n                  <img src={imgSrc} alt={author} width=\"100px\" />\n                  <p className={css.reviewsListItemAuthorName}>{author}</p>\n                </div>\n                <p className={css.reviewsListItemText}>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","export const searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'd21e7c74c298022b205fb848988c75ba',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n"],"names":["axios","GetFilmReviews","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","path","response","wrap","_context","prev","next","concat","searchParams","sent","data","results","length","Notify","abrupt","stop","_x","apply","arguments","_useState","useState","_useState2","_slicedToArray","filmReview","setFilmReview","useParams","useEffect","then","catch","error","console","_jsx","_Fragment","children","className","css","map","author","avatar_path","content","imgSrc","_jsxs","src","alt","width","URLSearchParams","method","api_key","language","include_adult","headers","accept"],"sourceRoot":""}